# I plot the relationship between score in oral comprehension and gender:
ggplot(data=data, aes(x=Gender, y=data$score_oral_comprehension)) +
geom_boxplot() +
geom_violin(alpha=0.5, aes(fill=Gender)) +
theme_bw() +
labs(title = "Relation between scores in oral comprehension and gender, accross children",
subtitle = "",
x = "Gender",
y="Scores in oral comprehension")
ggplot(data=data, aes(x =Gender, y=score_oral_comprehension)) +
geom_boxplot() +
geom_violin(alpha=0.5, aes(fill=Gender)) +
theme_bw() +
labs(title = "Relation between scores in oral comprehension and gender accross children",
subtitle = "In  different mother's language conditions",
caption = "Mother's language = 1: Mostly French, 2: Mostly a foreign language",
x = "Gender",
y="Scores in oral comprehension") +
facet_wrap(~language_mother)
# Créer un jeu de données avec une variable discrète
donnees <- data.frame(
categorie = rep(c("A", "B", "C", "D", "E"), each = 20),
valeur = rnorm(100)
)
# Créer un graphique ggplot avec facet_wrap et personnaliser les noms des facettes
gg <- ggplot(donnees, aes(x = valeur, y = ..density..)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Histogramme avec facet_wrap") +
xlab("Valeur") +
ylab("Densité") +
theme_minimal()
# Utiliser facet_wrap avec labeller pour personnaliser les noms des facettes
gg + facet_wrap(~categorie, scales = "free", labeller = as_labeller(c("A" = "Premier", "B" = "Deuxième", "C" = "Troisième", "D" = "Quatrième", "E" = "Cinquième")))
ggplot(data=data, aes(x =Gender, y=score_oral_comprehension)) +
geom_boxplot() +
geom_violin(alpha=0.5, aes(fill=Gender)) +
theme_bw() +
labs(title = "Relation between scores in oral comprehension and gender accross children",
subtitle = "In  different mother's language conditions",
caption = "Mother's language = 1: Mostly French, 2: Mostly a foreign language",
x = "Gender",
y="Scores in oral comprehension") +
facet_wrap(~language_mother, labeller = as_labeller(c("1" = "Mostly Frence", "2" = "Mostly a foreign language")))
ggplot(data=data, aes(x =Gender, y=score_oral_comprehension)) +
geom_boxplot() +
geom_violin(alpha=0.5, aes(fill=Gender)) +
theme_bw() +
labs(title = "Relation between scores in oral comprehension and gender accross children",
subtitle = "In  different mother's language conditions",
caption = "Mother's language = 1: Mostly French, 2: Mostly a foreign language",
x = "Gender",
y="Scores in oral comprehension") +
facet_wrap(~language_mother, labeller = as_labeller(c("1" = "Mostly Frence", "2" = "Mostly a foreign language")))
ggplot(data=data, aes(x =Gender, y=score_oral_comprehension)) +
geom_boxplot() +
geom_violin(alpha=0.5, aes(fill=Gender)) +
theme_bw() +
labs(title = "Relation between scores in oral comprehension and gender accross children",
subtitle = "In  different mother's language conditions",
caption = "Mother's language = 1: Mostly French, 2: Mostly a foreign language",
x = "Gender",
y="Scores in oral comprehension") +
facet_wrap(~language_mother, labeller = as_labeller(c("1" = "Mostly French", "2" = "Mostly a foreign language")))
ggplot(data=data, aes(x =Gender, y=score_oral_comprehension)) +
geom_boxplot() +
geom_violin(alpha=0.5, aes(fill=Gender)) +
theme_bw() +
labs(title = "Relation between scores in oral comprehension and gender accross children",
subtitle = "In  different mother's language conditions",
x = "Gender",
y="Scores in oral comprehension") +
facet_wrap(~language_mother, labeller = as_labeller(c("1" = "Mostly French", "2" = "Mostly a foreign language")))
#Main statistics of Learn and Gender
table(data$learn)
table(data$time_sleep)
#Replace the 9 value (no answer) by NA
data$learn[data$learn==9] <- NA
#Summary statistics
summary(data$learn)
summary(data$time_sleep)
sd(data$learn, na.rm=TRUE)
sd(data$time_sleep, na.rm=TRUE)
#Summary statistics
summary(data$learn)
summary(data$time_sleep)
#Visual comparing of the distribution of learn
ggplot(data, aes(x=learn)) +
geom_histogram() +
theme_bw() +
labs(title = "Distribution of learn",
subtitle = "Subtitle",
caption = "1: / 2: / 3: / 4:",
x = "Learn",
y="Frequency")
ggplot(data, aes(x=data$time_sleep)) +
geom_histogram(position="dodge") +
theme_bw() +
labs(title = "Distribution of the time sleep",
subtitle = "Subtitle",
caption = "Time sleep = 1:before 8pm, 2: between 8 and 9pm, 3: after 9pm, 4: it depends on him,NA: no answer",
x = "Time sleep",
y="Frequency")
summary(data$time_sleep)
table(data$time_sleep)
ggplot(data, aes(x=data$time_sleep)) +
geom_histogram(position="dodge") +
theme_bw() +
labs(title = "Distribution of the time sleep",
subtitle = "Subtitle",
caption = "Time sleep = 1:before 8pm, 2: between 8 and 9pm, 3: after 9pm, 4: it depends on him",
x = "Time sleep",
y="Frequency")
sapply(data$learn, mean)
#Replace the 9 value (no answer) by NA
data$learn[data$learn==9] <- NA
#Summary statistics
summary(data$learn)
summary(data$time_sleep)
sd(data$learn, na.rm=TRUE)
sd(data$time_sleep, na.rm=TRUE)
ggplot(data=data, aes(x=Gender, y=data$score_oral_comprehension)) +
geom_boxplot() +
geom_violin(alpha=0.5, aes(fill=Gender)) +
theme_bw() +
labs(title = "Relation between scores in oral comprehension and gender accross children",
subtitle = "",
x = "Gender",
y="Scores in oral comprehension")
ggplot(data=data, aes(x =Gender, y=score_oral_comprehension)) +
geom_boxplot() +
geom_violin(alpha=0.5, aes(fill=Gender)) +
theme_bw() +
labs(title = "Relation between scores in oral comprehension and gender accross children",
subtitle = "In  different mother's language conditions",
x = "Gender",
y="Scores in oral comprehension") +
facet_wrap(~language_mother, labeller = as_labeller(c("1" = "Mostly French", "2" = "Mostly a foreign language")))
summary(lm(data=data, data$score_memory~time_sleep))
summary(lm(data=data, data$score_lecture~time_sleep))
summary(lm(data=data, data$score_numeracy~time_sleep))
summary(lm(data=data, data$score_oral_comprehension~ time_sleep))
summary(lm(data=data, data$score_phonology~ time_sleep))
summary(lm(data=data, data$score_writing~ time_sleep))
summary(lm(data=data, learn~time_sleep))
#Main statistics of Learn and Gender
table(data$learn)
table(data$time_sleep)
#Replace the 9 value (no answer) by NA
data$learn[data$learn==9] <- NA
#Summary statistics
summary(data$learn)
summary(data$time_sleep)
sd(data$learn, na.rm=TRUE)
sd(data$time_sleep, na.rm=TRUE)
#Visual comparing of the distribution of learn
ggplot(data, aes(x=learn)) +
geom_histogram() +
theme_bw() +
labs(title = "Distribution of learn",
subtitle = "Subtitle",
caption = "",
x = "Learn",
y="Frequency")
#Visual comparing of the distribution of learn
ggplot(data, aes(x=learn)) +
geom_histogram() +
theme_bw() +
labs(title = "Distribution of learn",
subtitle = "",
caption = "1: not at all, 2: not really, 3: yes, a bit, 4: yes, a lot, 9: no answer",
x = "Learn",
y="Frequency")
#Visual exploration of the distribution of learn
ggplot(data, aes(x=learn)) +
geom_histogram() +
theme_bw() +
labs(title = "Distribution of parent's answer about their child's learning at school",
subtitle = ""),
#Visual exploration of the distribution of learn
ggplot(data, aes(x=learn)) +
geom_histogram() +
theme_bw() +
labs(title = "Distribution of parent's answer about their child's learning at school",
subtitle = "",
caption = "Parent's answer about the learning of their child: 1: not at all, 2: not really, 3: yes, a bit, 4: yes, a lot, 9: no answer",
x = "Learn",
y="Frequency")
ggplot(data, aes(x=time_sleep, y=learn)) +
geom_jitter() +  geom_smooth(method ="lm", se=FALSE, color="red") +
theme_bw() +
labs(title = "Relationship between time sleep and learn",
subtitle = "Subtitle",
caption = "1: / 2: / 3: / 4:",
x = "Time sleep",
y="Learn")
ggplot(data, aes(x=data$time_sleep)) +
geom_histogram(position="dodge") +
theme_bw() +
labs(title = "Distribution of the time sleep",
subtitle = "Subtitle",
caption = "Time sleep = 1:before 8pm, 2: between 8 and 9pm, 3: after 9pm, 4: it depends on him",
x = "Time sleep",
y="Frequency")
summary(lm(data=data, learn~time_sleep))
summary(lm(data=data, learn~time_sleep + Gender))
summary(lm(data=data, learn~time_sleep + data$number_siblings))
summary(lm(data=data, learn~time_sleep + data$income))
summary(lm(data=data, learn~income))
summary(lm(data=data, learn~time_sleep + data$like_school))
install.packages("GGally")
library("GGally")
ggpairs(data, c("time_sleep", "learn", "kie_school", "Gender"))
ggpairs(data,[ ,c("time_sleep", "learn", "kie_school", "Gender")])
ggpairs(data[ ,c("time_sleep", "learn", "kie_school", "Gender")])
ggpairs(data[ ,c("time_sleep", "learn", "like_school", "Gender")])
ggpairs(data[ ,c("time_sleep", "learn", "like_school", "sexe")])
ggplot(data, aes(x=time_sleep, y=learn)) +
geom_jitter() +  geom_smooth(method ="lm", se=FALSE, color="red") +
theme_bw() +
labs(title = "Relationship between time sleep and learn",
subtitle = "Subtitle",
caption = "Time sleep : Time sleep = 1:before 8pm, 2: between 8 and 9pm, 3: after 9pm, 4: it depends on him",
x = "Time sleep",
y="Learn")
ggplot(data, aes(x=time_sleep, y=learn)) +
geom_jitter() +  geom_smooth(method ="lm", se=FALSE, color="red") +
theme_bw() +
labs(title = "Relationship between time sleep and learn",
subtitle = "Subtitle",
caption = "Time sleep : Time sleep = 1:before 8pm, 2: between 8 and 9pm, 3: after 9pm, 4: it depends on him
Parent's answer about the learning of their child: 1: not at all, 2: not really, 3: yes, a bit, 4: yes, a lot, 9: no answer",
x = "Time sleep",
y="Learn")
ggplot(data, aes(x=time_sleep, y=learn)) +
geom_jitter() +  geom_smooth(method ="lm", se=FALSE, color="red") +
theme_bw() +
labs(title = "Relationship between time sleep and learn",
subtitle = "Subtitle",
caption = "Time sleep = 1:before 8pm, 2: between 8 and 9pm, 3: after 9pm, 4: it depends on him
Parent's answer about the learning of their child: 1: not at all, 2: not really, 3: yes, a bit, 4: yes, a lot, 9: no answer",
x = "Time sleep",
y="Learn")
#Visual exploration of the distribution of learn
ggplot(data, aes(x=learn)) +
geom_histogram() +
theme_bw() +
labs(title = "Distribution of parent's answer about their child's learning at school",
subtitle = "",
caption = "Parent's answer about the learning of their child: 1: not at all, 2: not really, 3: yes, a bit, 4: yes, a lot, 9: no answer",
x = "Learn",
y="Frequency")
#
summary(lm(data=data, time_sleep~learn))
ggplot(data, aes(x=learn, y=time_sleep)) +
geom_jitter() +  geom_smooth(method ="lm", se=FALSE, color="red") +
theme_bw() +
labs(title = "Relationship between time sleep and learn",
subtitle = "Subtitle",
caption = "Time sleep = 1:before 8pm, 2: between 8 and 9pm, 3: after 9pm, 4: it depends on him
Parent's answer about the learning of their child: 1: not at all, 2: not really, 3: yes, a bit, 4: yes, a lot",
x = "Time sleep",
y= "Learn")
#Main statistics of Learn and Gender
table(data$learn)
table(data$like_school)
data$like_school[data$like_school==9] <- NA
#Summary statistics
summary(data$learn)
summary(data$like_school)
sd(data$learn, na.rm=TRUE)
sd(data$like_school, na.rm=TRUE)
#Visual exploration of the distribution of learn
ggplot(data, aes(x=learn)) +
geom_histogram() +
theme_bw() +
labs(title = "Distribution of parent's answer about their child's learning at school",
subtitle = "",
caption = "Parent's answer about the learning of their child: 1: not at all, 2: not really, 3: yes, a bit, 4: yes, a lot",
x = "Learn",
y="Frequency")
ggplot(data, aes(x=data$like_school)) +
geom_histogram(position="dodge") +
theme_bw() +
labs(title = "Distribution of the time sleep",
subtitle = "Subtitle",
caption = "Time sleep = 1:before 8pm, 2: between 8 and 9pm, 3: after 9pm, 4: it depends on him",
x = "Time sleep",
y="Frequency")
ggplot(data, aes(x=like_school)) +
geom_histogram() +
theme_bw() +
labs(title = "Distribution of how the children like school",
subtitle = "",
caption = "Parent's answer about how much their child likes school= 1: not at all, 2: not really, 3: yes a bit, 4: yes a
lot /",
x = "Like school",
y="Frequency")
ggplot(data, aes(x=like_school)) +
geom_histogram() +
theme_bw() +
labs(title = "Distribution of how the children like school",
subtitle = "",
caption = "Parent's answer about how much their child likes school = 1: not at all, 2: not really, 3: yes a bit, 4: yes a lot",
x = "Like school",
y="Frequency")
ggplot(data, aes(x=like_school, y=learn)) +
geom_jitter() +  geom_smooth(method ="lm", se=FALSE, color="red") +
theme_bw() +
labs(title = "Relationship between time sleep and learn",
subtitle = "Subtitle",
caption = "Time sleep = 1:before 8pm, 2: between 8 and 9pm, 3: after 9pm, 4: it depends on him
Parent's answer about the learning of their child: 1: not at all, 2: not really, 3: yes, a bit, 4: yes, a lot",
x = "Time sleep",
y= "Learn")
ggplot(data, aes(x=like_school, y=learn)) +
geom_jitter() +  geom_smooth(method ="lm", se=FALSE, color="red") +
theme_bw() +
labs(title = "Relationship between how much the children like school and how much they learn at school",
subtitle = "Subtitle",
caption = "
x axis Parent's answer about how much their child likes school = 1: not at all, 2: not really, 3: yes a bit, 4: yes a lot
y axis Parent's answer about the learning of their child: 1: not at all, 2: not really, 3: yes a bit, 4: yes a lot",
x = "Like school",
y= "Learn")
ggplot(data, aes(x=like_school, y=learn)) +
geom_jitter() +  geom_smooth(method ="lm", se=FALSE, color="red") +
theme_bw() +
labs(title = "Relationship between how much the children like school and how much they learn at school",
subtitle = "Subtitle",
caption = "
Parent's answer about how much their child likes school (x axis) = 1: not at all, 2: not really, 3: yes a bit, 4: yes a lot
Parent's answer about the learning of their child (y axis ) = 1: not at all, 2: not really, 3: yes a bit, 4: yes a lot",
x = "Like school",
y= "Learn")
ggplot(data, aes(x=like_school, y=learn)) +
geom_jitter() +  geom_smooth(method ="lm", se=FALSE, color="red") +
theme_bw() +
labs(title = "Relationship between how much the children like school and how much they learn at school",
subtitle = "",
caption = "
Parent's answer about how much their child likes school (x axis) = 1: not at all, 2: not really, 3: yes a bit, 4: yes a lot
Parent's answer about how much their child learns at school (y axis ) = 1: not at all, 2: not really, 3: yes a bit, 4: yes a lot",
x = "Like school",
y= "Learn")
#
summary(lm(data=data, learn~like_school))
ggpairs(data[ ,c("learn", "like_school", "sexe", "income")])
ggpairs(data[ ,c("learn", "like_school", "sexe", "living_situations")])
ggpairs(data[ ,c("learn", "like_school", "sexe", "living_situation")])
summary(lm(data=data, learn~time_sleep + like_school))
summary(lm(data=data, learn~like_school + gender))
summary(lm(data=data, learn~like_school + Gender))
summary(lm(data=data, learn~like_school + Living_situation))
summary(lm(data=data, learn~like_school + living_situation))
summary(lm(data=data, learn~like_school + sexe))
ggpairs(data[ ,c("learn", "like_school", "sexe", "mother's language")])
ggpairs(data[ ,c("learn", "like_school", "sexe", "number_siblings")])
summary(lm(data=data, learn~like_school*Gender + Gender))
summary(lm(data=data, learn~like_school + Gender + number_siblings))
ggpairs(data[ ,c("learn", "like_school", "sexe", "living_situation", "number_siblings")])
summary(lm(data=data, learn~like_school + sexe))
knitr::opts_chunk$set(echo = TRUE)
data("Salaries", package = "carData")
library(estimatr)
library(ggplot2)
ggplot(Salaries, aes(x=salary)) +
geom_histogram() +
labs(
title = "Distribution of salary",
x = "Salary", y="Frequence") + theme_bw()
library(ggplot2)
ggplot(Salaries, aes(x=salary, fill=sex)) +
geom_histogram(position="dodge") +
labs(
title = "Distribution of salary",
x = "Salary", y = "Frequence") + theme_bw()
library(ggplot2)
ggplot(Salaries, aes(y=salary, x=sex, fill=sex)) +
geom_boxplot() +
labs(
title = "Distribution of salary",
x = "Sex", y="salary") + theme_bw()
table(Salaries$sex)
Male <- Salaries$salary[Salaries$sex=="Male"]
Female <- Salaries$salary[Salaries$sex=="Female"]
t.test(Male, Female, paired =FALSE) #this test isntead of wilcox because large sample size
# magnitude of the difference => we interpret the t value as 3.2 SD of difference between Male & Female
summary(lm(data=Salaries, salary ~ sex))
summary(lm(data=Salaries, log(salary) ~ sex))
salary <- log(Salaries$salary)
ggplot(Salaries, aes(x=salary, fill=rank)) +
geom_histogram(position="dodge")
aggregate(data= Salaries, salary ~ rank, FUN=mean)
ggplot(Salaries, aes(y=salary, fill=rank)) +
geom_boxplot()
summary(lm(data=Salaries, log(salary) ~ rank))
# if we want to change the baseline, we can switch the levels of the categorical variable,
# with the factor function, and rank them with the baseline in first
summary(lm(data=Salaries, log(salary) ~ rank + sex))
knitr::opts_chunk$set(echo = TRUE)
data("Salaries", package = "carData")
summary(lm(data=Salaries, log(salary)~rank + sex))
# Starting by looking visually at possible covariates
ggpairs(data[ ,c("learn", "like_school", "sexe", "living_situation", "income")])
summary(lm(data=data, learn~like_school*sexe))
summary(lm(data=data, learn~like_school*sexe + sexe))
summary(lm(data=data, learn~sexe))
summary(lm(data=data, learn~like_school + sexe))
summary(lm(data, learn~like_school + sexe + sexe*like_school))
summary(lm(data=datra, learn~like_school + sexe + sexe*like_school))
summary(lm(data=data, learn~like_school + sexe + sexe*like_school))
summary(lm(data=data, learn~like_school + sexe + like_school*score_numeric))
summary(lm(data=data, learn~like_school + sexe + like_school*score_written))
summary(lm(data=data, learn~like_school + sexe + like_school*data$score_writing))
summary(lm(data=data, learn~like_school + like_school*data$score_writing))
+ sexe
summary(lm(data=data, learn~like_school + sexe + like_school*data$score_writing))
data$total_scores <- data$score_oral_comprehension + data$score_writing + data$score_memory + data$score_numeracy + data$score_phonology + data$score_lecture
data$total_scores
summary(lm(data=data, learn~like_school + sexe + like_school*data$total_scores))
summary(lm(data=data, learn~like_school + sexe + like_school*score_writing))
summary(lm(data=data, learn~like_school + sexe + like_school*data$total_scores))
# Starting by looking visually at possible covariates
ggpairs(data[ ,c("learn", "like_school", "sexe", "living_situation")])
summary(lm(data=data, learn~like_school + sexe))
summary(lm(data=data, learn~like_school))
summary(lm(data=data, learn~like_school + sexe))
data$total <- data$score_lecture+data$score_memory+data$score_numeracy+data$score_oral_comprehension+data$score_phonology+data$score_writing
summary(lm(data=data, learn~like_school + sexe + like_school*score_writing + total))
# Introducing the new variable "total" in the regression model, to control for the scores total of the children across the several tests. CAREFUL, we have to take out the interaction term wore_writing (otherwise, multicollenearity)
summary(lm(data=data, learn~like_school + sexe + total))
#Main statistics of Learn and Gender
table(data$learn)
class(data$learn)
# Litrev - Cogmaster M1 -
install.packages("metafor")
library(metafor)
# Use the data.frame function to create the DataFrame
my_data <- data.frame(x1, x2, n1, n2, sd1, sd2)
x1 <- c(2.08, 12.76,	0.9,	0.3,	42.66, 2.84,	4.8)
x2 <- c(0.7,	4.5,	0.1, 0.9,	38.05,	1.97,	1.42)
n1 <- c(13, 9, 46, 127, 20, 26, 10)
n2 <- c(11,	8,	44,	123, 21,	26,	12)
sd1 <- c(45.93310408, 96.12699933,	74.30104306,	131.6105809,	12.15,	7.932121406,	23.92970643)
sd2 <- c(32.52341387,	80.56587367,	75.09517295, 129.486312,	11.29,	7.877613852,	38.88819487)
# Use the data.frame function to create the DataFrame
my_data <- data.frame(x1, x2, n1, n2, sd1, sd2)
my_data
# Use the data.frame function to create the DataFrame
data <- data.frame(x1, x2, n1, n2, sd1, sd2)
df_withES <- escalc(measure="SMD", m1i=x1, sd1i=sd1, n1i=n1,
m2i=x2, sd2i=sd2, n2i=n2, data=data)
df_withED
df_withES
#create forest & funnel plots
forest(df_withES$yi, df_withES$vi,slab=df_withES$short_ref)
funnel(df_withES$yi, df_withES$vi)
#create forest & funnel plots
forest(df_withES$yi, df_withES$vi,slab=df_withES$short_ref)
library(dplyr)
df_withES %>%
rename(yi = "effect size", vi = "variance in effect size")
df_withES %>%
rename("yi" = "effect size", "vi" = "variance in effect size")
rename(yi = COhen's d, vi = variance ES)
rename("yi" = Cohen's d, "vi" = variance ES)
df_withES %>%
rename("Cohen's d" = yi, "variance in Cohen'sd" = vi)
df_withES %>%
rename("Cohen's d" = yi, "variance in ES" = vi)
df_withES %>%
rename("Cohen's_d" = yi, "variance_in_ES" = vi)
df_withES %>%
rename("d" = yi, "variance_in_ES" = vi)
df_withES %>%
rename("d_COhen" = yi, "variance_in_ES" = vi)
df_withES %>%
rename("d_Cohen" = yi, "variance_in_ES" = vi)
#create forest & funnel plots
forest(df_withES$d_Cohen, df_withES$variance_in_ES,slab=df_withES$short_ref)
funnel(df_withES$d_Cohen, df_withES$variance_in_ES)
df_withES$d_Cohen <- NA
df_withES$d_Cohen = df_withES$yi
df_withES$d_Cohen
df_withES
df_withES$variance_in_ES <- NA
df_withES$variance_in_ES = df_withES$vi
df_withES
#create forest & funnel plots
forest(df_withES$yi, df_withES$vi,slab=df_withES$short_ref)
funnel(df_withES$yi, df_withES$vi)
short_ref <- c("Veytsman 2023",	"Gantman, 2011",	"Afsharnejad, 2022",	"Barry Wright, 2023",	"Rabin, 2018",	"Deckers, 2016",	"Matthews, 2018")
data <- data.frame(x1, x2, n1, n2, sd1, sd2, short_ref)
df_withES <- escalc(measure="SMD", m1i=x1, sd1i=sd1, n1i=n1,
m2i=x2, sd2i=sd2, n2i=n2, data=data)
df_withES$d_Cohen <- NA
df_withES$d_Cohen = df_withES$yi
df_withES$variance_in_ES <- NA
df_withES$variance_in_ES = df_withES$vi
df_withES
#create forest & funnel plots
forest(df_withES$yi, df_withES$vi,slab=df_withES$short_ref)
setwd("C:/Users/manon/Desktop/PROGRAMMATION/data")
# Packages
install.packages("dplyr")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("car")
install.packages("car")
library(dplyr)
library(ggplot2)
library(car)
